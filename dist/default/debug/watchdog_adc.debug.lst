

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Fri Mar 17 13:47:12 2023

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	12F1822
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    10                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.40
    15                           ; Generated 17/11/2021 GMT
    16                           ; 
    17                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC12F1822 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  0011                     	;# 
    63  0012                     	;# 
    64  0015                     	;# 
    65  0016                     	;# 
    66  0016                     	;# 
    67  0017                     	;# 
    68  0018                     	;# 
    69  0019                     	;# 
    70  001A                     	;# 
    71  001B                     	;# 
    72  001C                     	;# 
    73  001E                     	;# 
    74  001F                     	;# 
    75  008C                     	;# 
    76  0091                     	;# 
    77  0092                     	;# 
    78  0095                     	;# 
    79  0096                     	;# 
    80  0097                     	;# 
    81  0098                     	;# 
    82  0099                     	;# 
    83  009A                     	;# 
    84  009B                     	;# 
    85  009B                     	;# 
    86  009C                     	;# 
    87  009D                     	;# 
    88  009E                     	;# 
    89  010C                     	;# 
    90  0111                     	;# 
    91  0112                     	;# 
    92  0115                     	;# 
    93  0116                     	;# 
    94  0117                     	;# 
    95  0118                     	;# 
    96  0119                     	;# 
    97  011A                     	;# 
    98  011B                     	;# 
    99  011D                     	;# 
   100  011D                     	;# 
   101  018C                     	;# 
   102  0191                     	;# 
   103  0191                     	;# 
   104  0192                     	;# 
   105  0193                     	;# 
   106  0193                     	;# 
   107  0193                     	;# 
   108  0194                     	;# 
   109  0195                     	;# 
   110  0196                     	;# 
   111  0199                     	;# 
   112  019A                     	;# 
   113  019B                     	;# 
   114  019B                     	;# 
   115  019B                     	;# 
   116  019B                     	;# 
   117  019C                     	;# 
   118  019C                     	;# 
   119  019D                     	;# 
   120  019E                     	;# 
   121  019F                     	;# 
   122  020C                     	;# 
   123  0211                     	;# 
   124  0211                     	;# 
   125  0212                     	;# 
   126  0212                     	;# 
   127  0213                     	;# 
   128  0213                     	;# 
   129  0214                     	;# 
   130  0214                     	;# 
   131  0215                     	;# 
   132  0215                     	;# 
   133  0215                     	;# 
   134  0216                     	;# 
   135  0216                     	;# 
   136  0217                     	;# 
   137  0217                     	;# 
   138  0291                     	;# 
   139  0291                     	;# 
   140  0292                     	;# 
   141  0293                     	;# 
   142  0294                     	;# 
   143  0295                     	;# 
   144  0295                     	;# 
   145  0296                     	;# 
   146  0391                     	;# 
   147  0392                     	;# 
   148  0393                     	;# 
   149  039A                     	;# 
   150  039C                     	;# 
   151  039D                     	;# 
   152  039E                     	;# 
   153  039F                     	;# 
   154  0FE4                     	;# 
   155  0FE5                     	;# 
   156  0FE6                     	;# 
   157  0FE7                     	;# 
   158  0FE8                     	;# 
   159  0FE9                     	;# 
   160  0FEA                     	;# 
   161  0FEB                     	;# 
   162  0FED                     	;# 
   163  0FEE                     	;# 
   164  0FEF                     	;# 
   165  0000                     	;# 
   166  0001                     	;# 
   167  0002                     	;# 
   168  0003                     	;# 
   169  0004                     	;# 
   170  0005                     	;# 
   171  0006                     	;# 
   172  0007                     	;# 
   173  0008                     	;# 
   174  0009                     	;# 
   175  000A                     	;# 
   176  000B                     	;# 
   177  000C                     	;# 
   178  0011                     	;# 
   179  0012                     	;# 
   180  0015                     	;# 
   181  0016                     	;# 
   182  0016                     	;# 
   183  0017                     	;# 
   184  0018                     	;# 
   185  0019                     	;# 
   186  001A                     	;# 
   187  001B                     	;# 
   188  001C                     	;# 
   189  001E                     	;# 
   190  001F                     	;# 
   191  008C                     	;# 
   192  0091                     	;# 
   193  0092                     	;# 
   194  0095                     	;# 
   195  0096                     	;# 
   196  0097                     	;# 
   197  0098                     	;# 
   198  0099                     	;# 
   199  009A                     	;# 
   200  009B                     	;# 
   201  009B                     	;# 
   202  009C                     	;# 
   203  009D                     	;# 
   204  009E                     	;# 
   205  010C                     	;# 
   206  0111                     	;# 
   207  0112                     	;# 
   208  0115                     	;# 
   209  0116                     	;# 
   210  0117                     	;# 
   211  0118                     	;# 
   212  0119                     	;# 
   213  011A                     	;# 
   214  011B                     	;# 
   215  011D                     	;# 
   216  011D                     	;# 
   217  018C                     	;# 
   218  0191                     	;# 
   219  0191                     	;# 
   220  0192                     	;# 
   221  0193                     	;# 
   222  0193                     	;# 
   223  0193                     	;# 
   224  0194                     	;# 
   225  0195                     	;# 
   226  0196                     	;# 
   227  0199                     	;# 
   228  019A                     	;# 
   229  019B                     	;# 
   230  019B                     	;# 
   231  019B                     	;# 
   232  019B                     	;# 
   233  019C                     	;# 
   234  019C                     	;# 
   235  019D                     	;# 
   236  019E                     	;# 
   237  019F                     	;# 
   238  020C                     	;# 
   239  0211                     	;# 
   240  0211                     	;# 
   241  0212                     	;# 
   242  0212                     	;# 
   243  0213                     	;# 
   244  0213                     	;# 
   245  0214                     	;# 
   246  0214                     	;# 
   247  0215                     	;# 
   248  0215                     	;# 
   249  0215                     	;# 
   250  0216                     	;# 
   251  0216                     	;# 
   252  0217                     	;# 
   253  0217                     	;# 
   254  0291                     	;# 
   255  0291                     	;# 
   256  0292                     	;# 
   257  0293                     	;# 
   258  0294                     	;# 
   259  0295                     	;# 
   260  0295                     	;# 
   261  0296                     	;# 
   262  0391                     	;# 
   263  0392                     	;# 
   264  0393                     	;# 
   265  039A                     	;# 
   266  039C                     	;# 
   267  039D                     	;# 
   268  039E                     	;# 
   269  039F                     	;# 
   270  0FE4                     	;# 
   271  0FE5                     	;# 
   272  0FE6                     	;# 
   273  0FE7                     	;# 
   274  0FE8                     	;# 
   275  0FE9                     	;# 
   276  0FEA                     	;# 
   277  0FEB                     	;# 
   278  0FED                     	;# 
   279  0FEE                     	;# 
   280  0FEF                     	;# 
   281  000C                     _PORTAbits	set	12
   282  009C                     _ADRESH	set	156
   283  009E                     _ADCON1bits	set	158
   284  009D                     _ADCON0bits	set	157
   285  008C                     _TRISAbits	set	140
   286  010C                     _LATAbits	set	268
   287  0117                     _FVRCONbits	set	279
   288  019B                     _SPBRGL	set	411
   289  019C                     _SPBRGH	set	412
   290  019F                     _BAUDCONbits	set	415
   291  019D                     _RCSTAbits	set	413
   292  018C                     _ANSELAbits	set	396
   293  019E                     _TXSTAbits	set	414
   294  019A                     _TXREG	set	410
   295                           
   296                           	psect	cinit
   297  07EE                     start_initialization:	
   298                           ; #config settings
   299                           
   300  07EE                     __initialization:
   301                           
   302                           ; Clear objects allocated to COMMON
   303  07EE  3070               	movlw	low __pbssCOMMON
   304  07EF  0084               	movwf	4
   305  07F0  3000               	movlw	high __pbssCOMMON
   306  07F1  0085               	movwf	5
   307  07F2  300B               	movlw	11
   308  07F3  3187  2737  3187   	fcall	clear_ram0
   309                           
   310                           ; Clear objects allocated to BANK0
   311  07F6  3020               	movlw	low __pbssBANK0
   312  07F7  0084               	movwf	4
   313  07F8  3000               	movlw	high __pbssBANK0
   314  07F9  0085               	movwf	5
   315  07FA  3018               	movlw	24
   316  07FB  3187  2737  3187   	fcall	clear_ram0
   317  07FE                     end_of_initialization:	
   318                           ;End of C runtime variable initialization code
   319                           
   320  07FE                     __end_of__initialization:
   321  07FE  0020               	movlb	0
   322  07FF  2F3D               	ljmp	_main	;jump to C main() function
   323                           
   324                           	psect	bssCOMMON
   325  0070                     __pbssCOMMON:
   326  0070                     _timer:
   327  0070                     	ds	4
   328  0074                     _resettimer:
   329  0074                     	ds	2
   330  0076                     _actstate:
   331  0076                     	ds	2
   332  0078                     _laststate:
   333  0078                     	ds	2
   334  007A                     _resetState:
   335  007A                     	ds	1
   336                           
   337                           	psect	bssBANK0
   338  0020                     __pbssBANK0:
   339  0020                     _pintimer:
   340  0020                     	ds	4
   341  0024                     _buffer:
   342  0024                     	ds	20
   343                           
   344                           	psect	clrtext
   345  0737                     clear_ram0:	
   346                           ;	Called with FSR0 containing the base address, and
   347                           ;	WREG with the size to clear
   348                           
   349  0737  0064               	clrwdt	;clear the watchdog before getting into this loop
   350  0738                     clrloop0:
   351  0738  0180               	clrf	0	;clear RAM location pointed to by FSR
   352  0739  3101               	addfsr 0,1
   353  073A  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   354  073B  2F38               	goto	clrloop0	;have we reached the end yet?
   355  073C  3400               	retlw	0	;all done for this memory range, return
   356                           
   357                           	psect	cstackCOMMON
   358  0000                     __pcstackCOMMON:
   359  0000                     ?_main:
   360  0000                     ??_main:	
   361                           ; 1 bytes @ 0x0
   362                           
   363                           
   364                           	psect	maintext
   365  073D                     __pmaintext:	
   366                           ; 1 bytes @ 0x0
   367 ;;
   368 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   369 ;;
   370 ;; *************** function _main *****************
   371 ;; Defined at:
   372 ;;		line 92 in file "watchdog.c"
   373 ;; Parameters:    Size  Location     Type
   374 ;;		None
   375 ;; Auto vars:     Size  Location     Type
   376 ;;		None
   377 ;; Return value:  Size  Location     Type
   378 ;;                  1    wreg      void 
   379 ;; Registers used:
   380 ;;		wreg, status,2, status,0
   381 ;; Tracked objects:
   382 ;;		On entry : B1F/0
   383 ;;		On exit  : 0/0
   384 ;;		Unchanged: 0/0
   385 ;; Data sizes:     COMMON   BANK0   BANK1
   386 ;;      Params:         0       0       0
   387 ;;      Locals:         0       0       0
   388 ;;      Temps:          0       0       0
   389 ;;      Totals:         0       0       0
   390 ;;Total ram usage:        0 bytes
   391 ;; This function calls:
   392 ;;		Nothing
   393 ;; This function is called by:
   394 ;;		Startup code after reset
   395 ;; This function uses a non-reentrant model
   396 ;;
   397                           
   398                           
   399                           ;psect for function _main
   400  073D                     _main:
   401  073D                     l781:	
   402                           ;incstack = 0
   403                           ; Regs used in _main: [wreg+status,2+status,0]
   404                           
   405                           
   406                           ;watchdog.c: 93:     TRISAbits.TRISA2 = 0;
   407  073D  0021               	movlb	1	; select bank1
   408  073E  110C               	bcf	12,2	;volatile
   409                           
   410                           ;watchdog.c: 94:     TRISAbits.TRISA0 = 0;
   411  073F  100C               	bcf	12,0	;volatile
   412                           
   413                           ;watchdog.c: 95:     TRISAbits.TRISA5 = 0;
   414  0740  128C               	bcf	12,5	;volatile
   415                           
   416                           ;watchdog.c: 96:     TRISAbits.TRISA1 = 1;
   417  0741  148C               	bsf	12,1	;volatile
   418                           
   419                           ;watchdog.c: 97:     TRISAbits.TRISA4 = 1;
   420  0742  160C               	bsf	12,4	;volatile
   421                           
   422                           ;watchdog.c: 98:     ANSELAbits.ANSA1 = 0;
   423  0743  0023               	movlb	3	; select bank3
   424  0744  108C               	bcf	12,1	;volatile
   425                           
   426                           ;watchdog.c: 99:     ANSELAbits.ANSA0 = 0;
   427  0745  100C               	bcf	12,0	;volatile
   428  0746                     l783:
   429                           
   430                           ;watchdog.c: 100:     ADCON0bits.CHS = 0b00011;
   431  0746  0021               	movlb	1	; select bank1
   432  0747  081D               	movf	29,w	;volatile
   433  0748  3983               	andlw	-125
   434  0749  380C               	iorlw	12
   435  074A  009D               	movwf	29	;volatile
   436  074B                     l785:
   437                           
   438                           ;watchdog.c: 101:     ADCON0bits.ADON = 1;
   439  074B  141D               	bsf	29,0	;volatile
   440                           
   441                           ;watchdog.c: 102:     ADCON1bits.ADPREF = 0b11;
   442  074C  3003               	movlw	3
   443  074D  049E               	iorwf	30,f	;volatile
   444                           
   445                           ;watchdog.c: 103:     FVRCONbits.ADFVR = 0b10;
   446  074E  0022               	movlb	2	; select bank2
   447  074F  0817               	movf	23,w	;volatile
   448  0750  39FC               	andlw	-4
   449  0751  3802               	iorlw	2
   450  0752  0097               	movwf	23	;volatile
   451  0753                     l787:
   452                           
   453                           ;watchdog.c: 104:     FVRCONbits.FVREN = 1;
   454  0753  1797               	bsf	23,7	;volatile
   455  0754                     l789:
   456                           
   457                           ;watchdog.c: 106:     TXSTAbits.BRGH = 1;
   458  0754  0023               	movlb	3	; select bank3
   459  0755  151E               	bsf	30,2	;volatile
   460  0756                     l791:
   461                           
   462                           ;watchdog.c: 107:     TXSTAbits.TXEN = 1;
   463  0756  169E               	bsf	30,5	;volatile
   464  0757                     l793:
   465                           
   466                           ;watchdog.c: 108:     RCSTAbits.SPEN = 1;
   467  0757  179D               	bsf	29,7	;volatile
   468  0758                     l795:
   469                           
   470                           ;watchdog.c: 109:     BAUDCONbits.BRG16 = 1;
   471  0758  159F               	bsf	31,3	;volatile
   472  0759                     l797:
   473                           
   474                           ;watchdog.c: 110:     SPBRGH = 0;
   475  0759  019C               	clrf	28	;volatile
   476  075A                     l799:
   477                           
   478                           ;watchdog.c: 111:     SPBRGL = 12;
   479  075A  300C               	movlw	12
   480  075B  009B               	movwf	27	;volatile
   481  075C                     l801:
   482                           
   483                           ;watchdog.c: 121:     {;watchdog.c: 122:         timer++;
   484  075C  3001               	movlw	1
   485  075D  07F0               	addwf	_timer,f
   486  075E  3000               	movlw	0
   487  075F  3DF1               	addwfc	_timer+1,f
   488  0760  3000               	movlw	0
   489  0761  3DF2               	addwfc	_timer+2,f
   490  0762  3000               	movlw	0
   491  0763  3DF3               	addwfc	_timer+3,f
   492  0764                     l803:
   493                           
   494                           ;watchdog.c: 124:         if(timer <100)
   495  0764  0873               	movf	_timer+3,w
   496  0765  1D03               	btfss	3,2
   497  0766  2F72               	goto	u131
   498  0767  0872               	movf	_timer+2,w
   499  0768  1D03               	btfss	3,2
   500  0769  2F72               	goto	u131
   501  076A  0871               	movf	_timer+1,w
   502  076B  1D03               	btfss	3,2
   503  076C  2F72               	goto	u131
   504  076D  3064               	movlw	100
   505  076E  0270               	subwf	_timer,w
   506  076F  1803               	btfsc	3,0
   507  0770  2F72               	goto	u131
   508  0771  2F73               	goto	u130
   509  0772                     u131:
   510  0772  2FE8               	goto	l62
   511  0773                     u130:
   512  0773                     l805:
   513                           
   514                           ;watchdog.c: 125:         {;watchdog.c: 126:             ADCON0bits.ADGO = 1;
   515  0773  0021               	movlb	1	; select bank1
   516  0774  149D               	bsf	29,1	;volatile
   517  0775                     l63:	
   518                           ;watchdog.c: 127:             while (ADCON0bits.nDONE != 0);
   519                           
   520  0775  189D               	btfsc	29,1	;volatile
   521  0776  2F78               	goto	u141
   522  0777  2F79               	goto	u140
   523  0778                     u141:
   524  0778  2F75               	goto	l63
   525  0779                     u140:
   526  0779                     l807:
   527                           
   528                           ;watchdog.c: 128:             if(ADRESH < (int)((3200/3.2)*(float)(256/2048)))
   529  0779  081C               	movf	28,w	;volatile
   530  077A                     l811:
   531                           
   532                           ;watchdog.c: 132:             if(ADRESH > (int)((3750/3.2)*(float)(256/2048)))
   533  077A  081C               	movf	28,w	;volatile
   534  077B  1903               	btfsc	3,2
   535  077C  2F7E               	goto	u151
   536  077D  2F7F               	goto	u150
   537  077E                     u151:
   538  077E  2F80               	goto	l815
   539  077F                     u150:
   540  077F                     l813:
   541                           
   542                           ;watchdog.c: 133:             {;watchdog.c: 134:                 resetState = 0;
   543  077F  01FA               	clrf	_resetState
   544  0780                     l815:
   545                           
   546                           ;watchdog.c: 136:             if(ADRESH < 160)
   547  0780  30A0               	movlw	160
   548  0781  021C               	subwf	28,w	;volatile
   549  0782  1803               	skipnc
   550  0783  2F85               	goto	u161
   551  0784  2F86               	goto	u160
   552  0785                     u161:
   553  0785  2F88               	goto	l819
   554  0786                     u160:
   555  0786                     l817:
   556                           
   557                           ;watchdog.c: 137:             {;watchdog.c: 138:                 LATAbits.LATA5 = 0;
   558  0786  0022               	movlb	2	; select bank2
   559  0787  128C               	bcf	12,5	;volatile
   560  0788                     l819:
   561                           
   562                           ;watchdog.c: 140:             if(ADRESH > 158)
   563  0788  309F               	movlw	159
   564  0789  0021               	movlb	1	; select bank1
   565  078A  021C               	subwf	28,w	;volatile
   566  078B  1C03               	skipc
   567  078C  2F8E               	goto	u171
   568  078D  2F8F               	goto	u170
   569  078E                     u171:
   570  078E  2F91               	goto	l69
   571  078F                     u170:
   572  078F                     l821:
   573                           
   574                           ;watchdog.c: 141:             {;watchdog.c: 142:                 LATAbits.LATA5 = 1;
   575  078F  0022               	movlb	2	; select bank2
   576  0790  168C               	bsf	12,5	;volatile
   577  0791                     l69:	
   578                           ;watchdog.c: 143:             }
   579                           
   580                           
   581                           ;watchdog.c: 144:             if(PORTAbits.RA1 == 1)
   582  0791  0020               	movlb	0	; select bank0
   583  0792  1C8C               	btfss	12,1	;volatile
   584  0793  2F95               	goto	u181
   585  0794  2F96               	goto	u180
   586  0795                     u181:
   587  0795  2F9F               	goto	l825
   588  0796                     u180:
   589  0796                     l823:
   590                           
   591                           ;watchdog.c: 145:             {;watchdog.c: 146:                pintimer++;
   592  0796  3001               	movlw	1
   593  0797  07A0               	addwf	_pintimer,f
   594  0798  3000               	movlw	0
   595  0799  3DA1               	addwfc	_pintimer+1,f
   596  079A  3000               	movlw	0
   597  079B  3DA2               	addwfc	_pintimer+2,f
   598  079C  3000               	movlw	0
   599  079D  3DA3               	addwfc	_pintimer+3,f
   600                           
   601                           ;watchdog.c: 147:             }
   602  079E  2FA7               	goto	l827
   603  079F                     l825:
   604                           
   605                           ;watchdog.c: 149:             {;watchdog.c: 150:                 pintimer = 0;
   606  079F  3000               	movlw	0
   607  07A0  00A3               	movwf	_pintimer+3
   608  07A1  3000               	movlw	0
   609  07A2  00A2               	movwf	_pintimer+2
   610  07A3  3000               	movlw	0
   611  07A4  00A1               	movwf	_pintimer+1
   612  07A5  3000               	movlw	0
   613  07A6  00A0               	movwf	_pintimer
   614  07A7                     l827:
   615                           
   616                           ;watchdog.c: 152:             if(pintimer >= 30)
   617  07A7  0823               	movf	_pintimer+3,w
   618  07A8  1D03               	btfss	3,2
   619  07A9  2FB6               	goto	u190
   620  07AA  0822               	movf	_pintimer+2,w
   621  07AB  1D03               	btfss	3,2
   622  07AC  2FB6               	goto	u190
   623  07AD  0821               	movf	_pintimer+1,w
   624  07AE  1D03               	btfss	3,2
   625  07AF  2FB6               	goto	u190
   626  07B0  301E               	movlw	30
   627  07B1  0220               	subwf	_pintimer,w
   628  07B2  1C03               	btfss	3,0
   629  07B3  2FB5               	goto	u191
   630  07B4  2FB6               	goto	u190
   631  07B5                     u191:
   632  07B5  2FC5               	goto	l833
   633  07B6                     u190:
   634  07B6                     l829:
   635                           
   636                           ;watchdog.c: 153:             {;watchdog.c: 154:                 resettimer = 20;
   637  07B6  3014               	movlw	20
   638  07B7  00F4               	movwf	_resettimer
   639  07B8  3000               	movlw	0
   640  07B9  00F5               	movwf	_resettimer+1
   641  07BA                     l831:
   642                           
   643                           ;watchdog.c: 155:                 resetState = 1;
   644  07BA  01FA               	clrf	_resetState
   645  07BB  0AFA               	incf	_resetState,f
   646                           
   647                           ;watchdog.c: 156:                 pintimer = 0;
   648  07BC  3000               	movlw	0
   649  07BD  0020               	movlb	0	; select bank0
   650  07BE  00A3               	movwf	_pintimer+3
   651  07BF  3000               	movlw	0
   652  07C0  00A2               	movwf	_pintimer+2
   653  07C1  3000               	movlw	0
   654  07C2  00A1               	movwf	_pintimer+1
   655  07C3  3000               	movlw	0
   656  07C4  00A0               	movwf	_pintimer
   657  07C5                     l833:
   658                           
   659                           ;watchdog.c: 158:             if(resettimer > 0)
   660  07C5  0874               	movf	_resettimer,w
   661  07C6  0475               	iorwf	_resettimer+1,w
   662  07C7  1903               	btfsc	3,2
   663  07C8  2FCA               	goto	u201
   664  07C9  2FCB               	goto	u200
   665  07CA                     u201:
   666  07CA  2FCF               	goto	l837
   667  07CB                     u200:
   668  07CB                     l835:
   669                           
   670                           ;watchdog.c: 159:             {;watchdog.c: 160:                 resettimer--;
   671  07CB  3001               	movlw	1
   672  07CC  02F4               	subwf	_resettimer,f
   673  07CD  3000               	movlw	0
   674  07CE  3BF5               	subwfb	_resettimer+1,f
   675  07CF                     l837:
   676                           
   677                           ;watchdog.c: 162:             if(resettimer == 0)
   678  07CF  0874               	movf	_resettimer,w
   679  07D0  0475               	iorwf	_resettimer+1,w
   680  07D1  1D03               	btfss	3,2
   681  07D2  2FD4               	goto	u211
   682  07D3  2FD5               	goto	u210
   683  07D4                     u211:
   684  07D4  2FD6               	goto	l841
   685  07D5                     u210:
   686  07D5                     l839:
   687                           
   688                           ;watchdog.c: 163:                 {;watchdog.c: 164:                 resetState = 0;
   689  07D5  01FA               	clrf	_resetState
   690  07D6                     l841:
   691                           
   692                           ;watchdog.c: 166:             if( resetState )
   693  07D6  087A               	movf	_resetState,w
   694  07D7  1903               	btfsc	3,2
   695  07D8  2FDA               	goto	u221
   696  07D9  2FDB               	goto	u220
   697  07DA                     u221:
   698  07DA  2FDE               	goto	l75
   699  07DB                     u220:
   700  07DB                     l843:
   701                           
   702                           ;watchdog.c: 167:             {;watchdog.c: 168:                 LATAbits.LATA2 = 0;
   703  07DB  0022               	movlb	2	; select bank2
   704  07DC  110C               	bcf	12,2	;volatile
   705                           
   706                           ;watchdog.c: 169:             }
   707  07DD  2FE0               	goto	l845
   708  07DE                     l75:	
   709                           ;watchdog.c: 170:             else
   710                           
   711                           
   712                           ;watchdog.c: 171:             {;watchdog.c: 172:                 LATAbits.LATA2 = 1;
   713  07DE  0022               	movlb	2	; select bank2
   714  07DF  150C               	bsf	12,2	;volatile
   715  07E0                     l845:
   716                           
   717                           ;watchdog.c: 174:             timer= 0;
   718  07E0  3000               	movlw	0
   719  07E1  00F3               	movwf	_timer+3
   720  07E2  3000               	movlw	0
   721  07E3  00F2               	movwf	_timer+2
   722  07E4  3000               	movlw	0
   723  07E5  00F1               	movwf	_timer+1
   724  07E6  3000               	movlw	0
   725  07E7  00F0               	movwf	_timer
   726  07E8                     l62:	
   727                           ;watchdog.c: 175:         }
   728                           
   729                           
   730                           ;watchdog.c: 176:         _delay((unsigned long)((1)*(500000/4000.0)));
   731  07E8  3029               	movlw	41
   732  07E9                     u237:
   733  07E9  0B89               	decfsz	9,f
   734  07EA  2FE9               	goto	u237
   735  07EB  3200               	nop2
   736  07EC  2F5C               	goto	l801
   737  07ED  2802               	ljmp	start
   738  07EE                     __end_of_main:
   739  007E                     btemp	set	126	;btemp
   740  007E                     wtemp0	set	126
   741                           
   742                           	psect	idloc
   743                           
   744                           ;Config register IDLOC0 @ 0x8000
   745                           ;	unspecified, using default values
   746  8000                     	org	32768
   747  8000  3FFF               	dw	16383
   748                           
   749                           ;Config register IDLOC1 @ 0x8001
   750                           ;	unspecified, using default values
   751  8001                     	org	32769
   752  8001  3FFF               	dw	16383
   753                           
   754                           ;Config register IDLOC2 @ 0x8002
   755                           ;	unspecified, using default values
   756  8002                     	org	32770
   757  8002  3FFF               	dw	16383
   758                           
   759                           ;Config register IDLOC3 @ 0x8003
   760                           ;	unspecified, using default values
   761  8003                     	org	32771
   762  8003  3FFF               	dw	16383
   763                           
   764                           	psect	config
   765                           
   766                           ;Config register CONFIG1 @ 0x8007
   767                           ;	Oscillator Selection
   768                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
   769                           ;	Watchdog Timer Enable
   770                           ;	WDTE = OFF, WDT disabled
   771                           ;	Power-up Timer Enable
   772                           ;	PWRTE = OFF, PWRT disabled
   773                           ;	MCLR Pin Function Select
   774                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
   775                           ;	Flash Program Memory Code Protection
   776                           ;	CP = OFF, Program memory code protection is disabled
   777                           ;	Data Memory Code Protection
   778                           ;	CPD = OFF, Data memory code protection is disabled
   779                           ;	Brown-out Reset Enable
   780                           ;	BOREN = OFF, Brown-out Reset disabled
   781                           ;	Clock Out Enable
   782                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
   783                           ;	Internal/External Switchover
   784                           ;	IESO = ON, Internal/External Switchover mode is enabled
   785                           ;	Fail-Safe Clock Monitor Enable
   786                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
   787  8007                     	org	32775
   788  8007  39E4               	dw	14820
   789                           
   790                           ;Config register CONFIG2 @ 0x8008
   791                           ;	Flash Memory Self-Write Protection
   792                           ;	WRT = OFF, Write protection off
   793                           ;	PLL Enable
   794                           ;	PLLEN = OFF, 4x PLL disabled
   795                           ;	Stack Overflow/Underflow Reset Enable
   796                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
   797                           ;	Brown-out Reset Voltage Selection
   798                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
   799                           ;	Low-Voltage Programming Enable
   800                           ;	LVP = ON, Low-voltage programming enabled
   801  8008                     	org	32776
   802  8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         35
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      0      11
    BANK0            80      0      24
    BANK1            16      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              60      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      0       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      23       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0      18       6       30.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            10      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               10      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      23       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Fri Mar 17 13:47:12 2023

                     l62 07E8                       l63 0775                       l75 07DE  
                     l69 0791                      l801 075C                      l811 077A  
                    l803 0764                      l821 078F                      l813 077F  
                    l805 0773                      l831 07BA                      l823 0796  
                    l815 0780                      l807 0779                      l841 07D6  
                    l833 07C5                      l825 079F                      l817 0786  
                    l843 07DB                      l835 07CB                      l827 07A7  
                    l819 0788                      l845 07E0                      l837 07CF  
                    l829 07B6                      l781 073D                      l839 07D5  
                    l791 0756                      l783 0746                      l793 0757  
                    l785 074B                      l795 0758                      l787 0753  
                    l797 0759                      l789 0754                      l799 075A  
                    u200 07CB                      u201 07CA                      u210 07D5  
                    u130 0773                      u211 07D4                      u131 0772  
                    u220 07DB                      u140 0779                      u221 07DA  
                    u141 0778                      u150 077F                      u151 077E  
                    u160 0786                      u161 0785                      u170 078F  
                    u171 078E                      u180 0796                      u237 07E9  
                    u181 0795                      u190 07B6                      u191 07B5  
                    wreg 0009                     _main 073D                     fsr0h 0005  
                   indf0 0000                     fsr0l 0004                     btemp 007E  
                   start 0002                    ?_main 0000                    _TXREG 019A  
                  _timer 0070                    status 0003                    wtemp0 007E  
        __initialization 07EE             __end_of_main 07EE                   ??_main 0000  
                 _ADRESH 009C                   _SPBRGH 019C                   _SPBRGL 019B  
                 _buffer 0024  __end_of__initialization 07FE           __pcstackCOMMON 0000  
             __pbssBANK0 0020               __pmaintext 073D                  clrloop0 0738  
   end_of_initialization 07FE               _resetState 007A                _RCSTAbits 019D  
             _resettimer 0074                _PORTAbits 000C                _TRISAbits 008C  
              _TXSTAbits 019E              _BAUDCONbits 019F      start_initialization 07EE  
            __pbssCOMMON 0070                ___latbits 0000                _laststate 0078  
               _LATAbits 010C                clear_ram0 0737               _ADCON0bits 009D  
             _ADCON1bits 009E               _ANSELAbits 018C                 _actstate 0076  
          __size_of_main 00B1                 _pintimer 0020               _FVRCONbits 0117  
